StartAt: CheckForSendTyping
States:
  CheckForSendTyping:
    Type: Choice
    Choices:
      - And:
          - Variable: $.detail.message.chat.type
            StringEquals: "supergroup"
          - Not:
              And:
                - Variable: $.detail.message.entities
                  IsPresent: true
                - Variable: $.detail.message.entities[0].type
                  StringEquals: "bot_command"
                - Variable: $.detail.message.text
                  StringMatches: "/chat *"
          - Not:
              And:
                - Variable: $.detail.message.entities
                  IsPresent: true
                - Variable: $.detail.message.entities[0].type
                  StringEquals: "mention"
        Next: CheckForSummarization
    Default: SendTyping

  SendTyping:
    Type: Task
    Resource: "arn:aws:states:::events:putEvents"
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Chat Action
          Detail:
            chat_id.$: $.detail.message.chat.id
            action: typing
    ResultPath: null
    Next: CheckForSummarization

  CheckForSummarization:
    Type: Choice
    Choices:
      - Variable: $.detail.message.forward_origin
        IsPresent: false
        Next: GetResponse
      - Variable: $.detail.message.text
        IsPresent: false
        Next: GetResponse
    Default: GetSummary

  GetSummary:
    Type: Task
    Resource: "${SummarizationFunctionArn}"
    Parameters:
      chat_id.$: $.detail.message.chat.id
      text.$: $.detail.message.text
    Catch:
      - ErrorEquals:
          - "States.ALL"
        ResultPath: $.error
        Next: GetErrorResponse
    ResultPath: $.response
    Next: CheckForSendResponse

  GetResponse:
    Type: Task
    Resource: "${MessageFunctionArn}"
    Parameters:
      chat_id.$: $.detail.message.chat.id
      message.$: $.detail.message
    Catch:
      - ErrorEquals:
          - "States.ALL"
        ResultPath: $.error
        Next: GetErrorResponse
    ResultPath: $.response
    Next: CheckForSendResponse

  GetErrorResponse:
    Type: Task
    Resource: "${CompletionFunctionArn}"
    Parameters:
      message.$: $.detail.message
      text.$: "States.Format('Generates a concisely error message regarding the impossibility of satisfying request from user \"{}\", based on the error {}. ', $.detail.message.text, $.error)"
    ResultPath: $.response
    Next: CheckForSendResponse

  CheckForSendResponse:
    Type: Choice
    Choices:
      - Variable: $.response.send
        BooleanEquals: false
        Next: PassEnd
      - Variable: $.response.send
        BooleanEquals: true
        Next: SendResponse
    Default: SendResponse

  SendResponse:
    Type: Task
    Resource: "arn:aws:states:::events:putEvents"
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Message
          Detail:
            chat_id.$: $.detail.message.chat.id
            text.$: $.response.text
    ResultPath: null
    End: true

  PassEnd:
    Type: Pass
    ResultPath: null
    End: true
