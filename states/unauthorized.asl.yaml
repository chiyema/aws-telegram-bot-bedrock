StartAt: CheckForChatType
States:
  CheckForChatType:
    Type: Choice
    Choices:
      - Or:
          - Variable: $.detail.message.chat.type
            StringEquals: "supergroup"
          - Variable: $.detail.message.chat.type
            StringEquals: "group"
        Next: CheckForSendGroupUnauthorizedMessage
    Default: GetErrorResponse

  CheckForSendGroupUnauthorizedMessage:
    Type: Choice
    Choices:
      - And:
          - Variable: $.detail.message.entities
            IsPresent: true
          - Or:
              - Variable: $.detail.message.entities[0].type
                StringEquals: "bot_command"
              - Variable: $.detail.message.entities[0].type
                StringEquals: "mention"
        Next: GetErrorResponse
    Default: PassEnd

  GetErrorResponse:
    Type: Task
    Resource: "${CompletionFunctionArn}"
    Parameters:
      message.$: $.detail.message
      completionPrompt: "Avoid answering user's question, and generates an concisely error message regarding the impossibility of satisfying the request because user is forbidden to ask any questions"
    ResultPath: $.response
    Next: SendUnauthroizedMessage

  SendUnauthroizedMessage:
    Type: Task
    Resource: "arn:aws:states:::events:putEvents"
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Message
          Detail:
            chat_id.$: $.detail.message.chat.id
            text.$: $.response.text
    ResultPath: null
    End: true

  PassEnd:
    Type: Pass
    ResultPath: null
    End: true